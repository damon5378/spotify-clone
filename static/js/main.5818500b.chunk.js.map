{"version":3,"sources":["components/Spotify/Spotify.js","components/Login/Login.jsx","components/DataLayer/DataLayer.js","components/Header/Header.jsx","components/Body/Body.jsx","components/Footer/Footer.jsx","components/Sidebar/SidebarOptions.jsx","components/Sidebar/Sidebar.js","components/Player/Player.jsx","App.js","serviceWorker.js","components/DataLayer/reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","placeholder","type","Avatar","images","url","display_name","Body","spotify","Footer","fontSize","Grid","container","spacing","item","xs","Slider","aria-labelledby","SidebarOptions","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Player","SpotifyWebAPI","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","Boolean","hostname","match","playing","state","action","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5818500b.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://localhost:3000/\";\r\n\r\nconst clientId = \"50b1c2d9338343b6b49ef91c6636a963\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const loginUrl = `\r\n ${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from 'react';\r\nimport { loginUrl } from '../Spotify/Spotify';\r\nimport './Login.css';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/>\r\n\r\n            <a href={loginUrl}>Login with Spotify</a>\r\n        </div>\r\n    );\r\n}\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Avatar} from '@material-ui/core';\r\nimport { useDataLayerValue } from '../DataLayer/DataLayer';\r\n\r\nexport const Header = () => {\r\n    const [{user}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <SearchIcon />\r\n                <input\r\n                    placeholder=\"Search for Artists, Songs or Podcasts\"\r\n                    type=\"text\"/>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <Avatar src={user?.images[0]?.url} />\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Header } from '../Header/Header';\r\nimport './Body.css';\r\n\r\nexport const Body = ({ spotify }) => {\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify}/>\r\n\r\n            <div className=\"body__info\">\r\n                <img src=\"https://cdn.shortpixel.ai/client/q_lossy,ret_img,w_250/https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly-250x250.png\" alt=\"\"/>\r\n                <div className=\"body__infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>Description...</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Footer.css';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport { Grid, Slider } from '@material-ui/core';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__left\">\r\n                <img \r\n                    className=\"footer__albumLogo\"\r\n                    src=\"https://mvclip.ru/content/images/artists/1/1fbe08163715422aa9aedd639215eec2.jpg\" \r\n                    alt=\"\"/>\r\n                <div className=\"footer__songInfo\">\r\n                    <h4>Yeah!</h4>\r\n                    <p>Usher</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer__center\">\r\n                <ShuffleIcon className=\"footer__green\"/>\r\n                <SkipPreviousIcon className=\"footer__icon\" />\r\n                <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n                <SkipNextIcon className=\"footer__icon\" />\r\n                <RepeatIcon className=\"footer__green\" />\r\n            </div>\r\n            <div className=\"footer__right\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider aria-labelledby=\"continuous-slider\"/>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './SidebarOptions.css';\r\n\r\nexport const SidebarOptions = ({ title, Icon }) => {\r\n    return (\r\n        <div className=\"sidebarOption\">\r\n            {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport { SidebarOptions } from './SidebarOptions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from '../DataLayer/DataLayer';\r\n\r\nexport const Sidebar = () => {\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img \r\n                className=\"sidebar__logo\" \r\n                src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" />\r\n            <SidebarOptions Icon={HomeIcon} title=\"Home\" />\r\n            <SidebarOptions Icon={SearchIcon} title=\"Search\" />\r\n            <SidebarOptions Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n\r\n            <br />\r\n            <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n            <hr />\r\n\r\n            {playlists?.items?.map(playlist => (\r\n                <SidebarOptions title={playlist.name} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Body } from '../Body/Body';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { Sidebar } from '../Sidebar/Sidebar';\r\nimport './Player.css';\r\n\r\nexport const Player = ({ spotify }) => {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player__body\">\r\n                <Sidebar />\r\n                <Body spotify={spotify} />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {Login} from './components/Login/Login';\nimport { getTokenFromUrl } from './components/Spotify/Spotify';\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport { Player } from './components/Player/Player';\nimport { useDataLayerValue } from './components/DataLayer/DataLayer';\n\nconst spotify = new SpotifyWebAPI();\n\nfunction App() {\n\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      })\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n        dispatch({ \n          type: 'SET_USER',\n          user: user\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        })\n      })\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n    {\n      token ? (\n        <Player spotify={spotify}/>\n      ) : (\n        <Login />\n      )\n    }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    token: 'BQDPq3-8fNu8QUieTWzMLZfRr1ns2nGTTlHK_Nq3Ijt5PDlX6Q…wcSJCtQ_KLpaICzej5R5reaS5PkfjQl3VgPJf5ovg-7kzNtpB'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'SET_TOKEN':\r\n            return{\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return{\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from './components/DataLayer/DataLayer';\nimport reducer, { initialState } from './components/DataLayer/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}